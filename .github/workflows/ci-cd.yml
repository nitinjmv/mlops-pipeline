name: Preprocess, Train, Test, Validate

on:
  push:
    branches: [main]

jobs:
  build-pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: data ingestion
        run: PYTHONPATH=. python src/data_pipeline/data_ingestion.py

      - name: data preprocessing
        run: PYTHONPATH=. python src/data_pipeline/data_preprocessing.py

      - name: feature_engineering
        run: PYTHONPATH=. python src/data_pipeline/feature_engineering.py

      - name: Configure Git & DVC
        run: |
          git config --global user.name "nitinjmv"
          git config --global user.email "nitinjmv@github.com"
          dvc init
          dvc config core.autostage true
          git add .dvc .dvcignore
          git commit -m "Initialize DVC"

      - name: Authenticate DVC remote (DagsHub)
        run: |
          dvc remote add origin https://dagshub.com/nitinjmv/mlops-pipeline.dvc
          dvc remote modify origin --local auth basic
          dvc remote modify origin --local user "${{ secrets.DAGSHUB_USERNAME }}"
          dvc remote modify origin --local password "${{ secrets.DAGSHUB_TOKEN }}"
          dvc remote default origin

      - name: Pull latest DVC state
        run: dvc pull || true

      - name: Track and commit processed data
        run: |
          dvc add data/processed/test_tfidf.csv
          dvc add data/processed/train_tfidf.csv
          git add data/processed/*.dvc
          git commit -m "Auto DVC tracking update" || echo "Nothing to commit"

      - name: Push DVC data to DagsHub
        run: dvc push

      - name: Run Tests
        run: |
          PYTHONPATH=. pytest src/data_pipeline/test_data_ingestion.py
          PYTHONPATH=. pytest src/data_pipeline/test_data_preprocessing.py

      - name: model building
        run: PYTHONPATH=. python src/model_pipeline/model_building.py

      - name: model evaluation
        run: PYTHONPATH=. python src/model_pipeline/model_evaluation.py

      - name: Start Flask App
        run: |
          nohup python app/app.py &
